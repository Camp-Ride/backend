version: '3.8'
services:
  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - app-tier
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    restart: always
    container_name: kafka-ui
    ports:
      - '10001:8081'
    environment:
      - SERVER_PORT=8081
      - KAFKA_CLUSTERS_0_NAME=campride-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED=true
      - KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED=true
    networks:
      - app-tier
  db:
    container_name: campride_db
    image: mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_NAME}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - db-data:/var/lib/mysql
    restart: always
    networks:
      - campride_network
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]

  redis:
    container_name: campride_redis
    image: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - campride_network

  app:
    container_name: campride-api-server
    build: .
    volumes:
      - ./logs:/logs
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${MYSQL_PROD_URL}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - db
    restart: always
    networks:
      - campride_network

volumes:
  db-data:

networks:
  campride_network:
  app-tier:
    driver: bridge