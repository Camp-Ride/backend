plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.richjun'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {


    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.528'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'

    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.4'


    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"


    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '3.2.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '3.3.1'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:stomp-websocket:2.3.4'
    implementation 'org.webjars.npm:sockjs:0.3.24'
    implementation 'org.springframework:spring-messaging:6.1.11'

    implementation 'redis.clients:jedis:5.1.4'

    implementation 'com.google.firebase:firebase-admin:9.3.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.18.0'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'

    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

}

def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(generated)
}

sourceSets {
    main.java.srcDirs += "$projectDir/build/generated"
}

clean { delete file('src/main/generated') }

tasks.named('test') {
    useJUnitPlatform()
}
